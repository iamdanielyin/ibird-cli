#!/usr/bin/env node

const os = require('os');
const Mustache = require('mustache');
const program = require('commander');
const path = require('path');
const fs = require('fs');
const pkgjson = require('../package.json');
const tplsDir = path.resolve(__dirname, '../src/tpls');
const { info, warn, success, error } = require('../src/utils/log');

program
.version(pkgjson.version, '-v, --version')
.option('-f, --file <filename>', 'Specify the file name of the middleware');

program.on('--help', function () {
    console.log('  Examples:');
    console.log('');
    console.log('    $ ibird mdl -f mdl_test');
    console.log('    $ ibird mdl -f mdl_test.js');
    console.log('    $ ibird mdl -f /home/ibird/mdl_test.js');
    console.log('');
});

program.parse(process.argv);

if (!program.file) return error(`The middleware file name can not be empty.`);
program.file = (program.file.lastIndexOf('.') >= 0) ? program.file : `${program.file}.js`;
program.file = path.isAbsolute(program.file) ? program.file : path.resolve(process.cwd(), 'app/middleware', program.file);
const template = fs.readFileSync(path.resolve(tplsDir, 'middleware.tpl')).toString();
const output = Mustache.render(template, {
    username: os.userInfo().username,
    created: new Date().toLocaleDateString()
});
fs.writeFileSync(program.file, output);
success(`Create middleware successfully: ${program.file.replace(new RegExp(`${process.cwd()}/`, 'g'), '')}`);